@use "sass:math";

// --- VARIABLES ---
$doc-font-size: 16; // In pixels without unit
$doc-line-height: 24; // In pixels without unit
$doc-scale-ratio: 1.618; // Scaling factor (golden ratio 1.618, perfect fourth 1.333)

// --- FUNCTIONS ---
// Returns a line-height "unit". I hope rhl units will be supported everywhere soon.
// Use this for paddings, margins and sizes if you can.
@function rhythm-unit($unit) {
    @return math.div(($doc-line-height * $unit), $doc-font-size) + 0rem;
}

// --- MIXINS ---
// Sets font-size and line-height in relation to each other.
// It's in multiples, so 0 would be the root size, and 1 would be
// the root size multiplied by the ratio.
@mixin set-size($multiple) {
    // Calculate size
    $size: $doc-font-size * math.pow($doc-scale-ratio, $multiple);

    // Set font size in rems
    font-size: math.div($size, $doc-font-size) + 0rem;

    // Get line-height multiple rounded up to nearest integer
    $multiple: math.round(math.div($size, $doc-line-height));
    line-height: rhythm-unit(math.clamp(1, $multiple, math.$max-safe-integer));
}
// Draws a baseline grid.
// Only really works when set same place as body-copy, with no margin or padding.
// Primarily for debugging purposes.
@mixin baseline-background($alpha, $offset: 0) {
    background-image: repeating-linear-gradient(
        to bottom,
        transparent 0px,
        transparent calc(rhythm-unit(1) - 1px),
        rgba(128, 128, 128, $alpha) calc(rhythm-unit(1) - 1px),
        rgba(128, 128, 128, $alpha) rhythm-unit(1)
    );
    background-position-y: rhythm-unit($offset) + 0rem;
}
// --- BODY-COPY MIXIN ---
// Use this anywhere you want the body copy.
// Such as inside an <article> or similar.
// Anywhere where you need the paragraphs to be spaced from the headings.
// This also assumes that none of the headings are nested inside
// a <header> tag, but sits freely next to the other elements.
@mixin body-copy {
    // --- HEADINGS ---
    // Relative position is set here, because headings need to be a little closer
    // to the elements they relate to (gestahlt and all that).
    @for $i from 1 through 6 {
        h#{$i} {
            position: relative;
            top: rhythm-unit(0.25);
        }
    }
    // --- MARGINS ---
    // Add top margin to elements that come after another
    h1 + *,
    h2 + *,
    h3 + *,
    h4 + *,
    h5 + *,
    h6 + *,
    p + *,
    ol + *,
    ul + *,
    blockquote + *,
    form + *,
    fieldset + *,
    q + *,
    code + *,
    table + *,
    hr + * {
        margin-top: rhythm-unit(1);
    }
    // --- LISTS ---
    // Add top and left margin to lists
    ol,
    ul {
        margin-top: rhythm-unit(1);
        margin-left: rhythm-unit(1);
    }
    // Remove top margin and add left margin to nested lists
    li > ol,
    li > ul {
        margin-top: 0;
        margin-left: rhythm-unit(1);
    }
}

// --- BASELINE ---
// Remove standard sizings from all elements
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-size: inherit;
    line-height: inherit;
}
// Setting the baseline
html,
body {
    @include set-size(0);
}

// --- HEADINGS ---
// Set heading sizes and line heights
// This sets h5 to same size as paragraphs.
@for $i from 1 through 6 {
    h#{$i} {
        @include set-size((5 - $i));
    }
}

// --- FORM AND INPUT FIXES ---
input:not([type="checkbox"], [type="radio"]),
select:not([multiple]),
button {
    line-height: rhythm-unit(1);
    height: rhythm-unit(1.2);
    margin-top: rhythm-unit(0.4);
    margin-bottom: rhythm-unit(0.4);
}

// --- TYPOGRAPHY FIXES ---
// Prevent <sub>, <sup>, <li>::markers
// from expanding the size of their parent
sub,
sup,
li::marker,
a,
b,
i,
strong,
em,
small,
code,
samp {
    line-height: 0rem;
}
// Fix horizontal ruler pushing everything around
// by setting negative margins so it has "no size"
hr {
    border-width: 1px 0 0 0;
    margin: -1px 0;
}

// --- TABLES ---
// Fix tables
table {
    border-spacing: 0px;
    border-collapse: collapse;
}